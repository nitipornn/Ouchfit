//
//  CommunityView.swift
//  Ouch!Fit
//
//  Created by Chanita Pornsaktawee on 29/4/2568 BE.
//

import SwiftUI
import PhotosUI // ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PhotosUI

// 1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Model)
struct Post: Identifiable {
    let id = UUID()
    let username: String
    let profileImageName: String
    let postImageName: String? // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Optional String
    let caption: String
    var likes: Int
    var comments: [Comment]
    var isLiked: Bool = false
}

struct Comment: Identifiable {
    let id = UUID()
    let username: String
    let text: String
}

// 2. Custom View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏û‡∏™‡∏ï‡πå
struct PostView: View {
    @Binding var post: Post

    var body: some View {
        VStack(alignment: .leading, spacing: 10) {
            // ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå
            HStack {
                Image(post.profileImageName)
                    .resizable()
                    .scaledToFill()
                    .frame(width: 40, height: 40)
                    .clipShape(Circle())
                Text(post.username)
                    .font(.custom("Classyvogueregular", size: 20))
                    .fontWeight(.bold)
                Spacer()
            }
            .padding(.horizontal)

            // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏à‡∏≤‡∏Å Assets
            if let postImageName = post.postImageName { // Use if-let for optional binding
                Image(postImageName)
                    .resizable()
                    .scaledToFill()
                    .frame(height: 300)
                    .clipped()
                    .cornerRadius(10)
                    .padding(.horizontal)
            } else {
                // Show a placeholder if there's no image
                Rectangle()
                    .fill(Color.gray.opacity(0.2))
                    .frame(height: 300)
                    .cornerRadius(10)
                    .padding(.horizontal)
            }

            // Like ‡πÅ‡∏•‡∏∞ Comment
            HStack {
                Button(action: {
                    post.isLiked.toggle()
                    if post.isLiked {
                        post.likes += 1
                    } else {
                        post.likes -= 1
                    }
                }) {
                    Image(systemName: post.isLiked ? "heart.fill" : "heart")
                        .font(.title2)
                        .foregroundColor(post.isLiked ? .red : .primary)
                }
                Text("\(post.likes) Likes")
                    .font(.custom("Classyvogueregular", size: 16))
                Spacer()
                Button(action: {
                    // TODO: ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
                }) {
                    Image(systemName: "message")
                        .font(.title2)
                }
                Text("\(post.comments.count) Comments")
                    .font(.custom("Classyvogueregular", size: 12))
            }
            .padding(.horizontal)

            // ‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢
            Text(post.caption)
                .font(.custom("Classyvogueregular", size: 10))
                .foregroundColor(.gray)
                .padding(.horizontal)

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå 2 ‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å
            if !post.comments.isEmpty {
                VStack(alignment: .leading) {
                    ForEach(post.comments.prefix(2)) { comment in
                        Text("\(comment.username): \(comment.text)")
                            .font(.custom("Classyvogueregular", size: 10))
                            .padding(.horizontal)
                    }
                    if post.comments.count > 2 {
                        Button(action: {
                            // TODO: ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        }) {
                            Text("View all \(post.comments.count) comments")
                                .font(.custom("Classyvogueregular", size: 10))
                                .foregroundColor(.gray)
                                .padding(.horizontal)
                        }
                    }
                }
            }

            Divider()
                .padding(.vertical, 5)
        }
        .padding(.bottom, 10)
    }
}

// 3. Community View
struct CommunityView: View {
    @State var posts: [Post] = [
        Post(
            username: "user1",
            profileImageName: "Profile1",
            postImageName: "ootd1",
            caption: "Beach day #ootd #fashion #casual",
            likes: 15,
            comments: [
                Comment(username: "friend1", text: "üëäüèª"),
            ],
            isLiked: true
        ),
        Post(
            username: "fashionista",
            profileImageName: "Profile2",
            postImageName: "ootd2",
            caption: "Feeling chic in this outfit. ‚ú® #style #ootdfashion",
            likes: 25,
            comments: [
                Comment(username: "follower1", text: "‡∏Ç‡∏≠‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞")
            ],
            isLiked: false
        ),
        Post(
            username: "ootdlover",
            profileImageName: "Profile3",
            postImageName: "ootd3",
            caption: "Weekend vibes! ‚òÄÔ∏è #outfitoftheday #weekendstyle",
            likes: 10,
            comments: [Comment(username: "wiggles", text: "‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏Å ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏ö‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞"),
                      Comment(username: "IloveMe", text: "‡∏ä‡∏≠‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞")],
            isLiked: false
        ),
        Post(
            username: "instafashion",
            profileImageName: "Profile4",
            postImageName: "ootd4",
            caption: "New arrival! Loving this piece. ‚ù§Ô∏è #fashiongram #newcollection",
            likes: 30,
            comments: [
                Comment(username: "buyer1", text: "‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏Ñ‡πà‡∏∞"),
                Comment(username: "buyer2", text: "‡∏™‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞")
            ],
            isLiked: true
        )
    ]
    @State private var isShowingPostCreator = false // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå

    var body: some View {
        NavigationView { // ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ NavigationView ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ .sheet
            ZStack(alignment: .bottomTrailing) {
                ScrollView {
              

                        VStack(spacing: 20) {
                            ForEach($posts) { $post in
                                PostView(post: $post)
                            }
                        }
                        .padding(.horizontal)
                }

                // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
                Button(action: {
                    isShowingPostCreator = true // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î
                }) {
                    Image(systemName: "plus")
                        .font(.system(size: 24, weight: .bold))
                        .padding()
                        .background(Color.cyan)
                        .foregroundColor(.white)
                        .clipShape(Circle())
                        .shadow(radius: 4)
                }
                .padding()
            }
            .navigationBarTitle("Ouch!Fitnity", displayMode: .inline)
            .toolbar {
                ToolbarItem(placement: .principal) {
                    Text("Ouch!Fitnity")
                        .font(.custom("Classyvogueregular", size: 24)) // Custom font
                        .bold()
                        .foregroundColor(.black) // Optional: set font color
                }}
            // ‡πÉ‡∏ä‡πâ .sheet ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á PostCreatorView
            .sheet(isPresented: $isShowingPostCreator) {
                PostCreatorView(posts: $posts, isShowingPostCreator: $isShowingPostCreator)
            }
        }
    }
}

// 4. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå (PostCreatorView)
struct PostCreatorView: View {
    @Binding var posts: [Post] // ‡∏£‡∏±‡∏ö Binding ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï posts ‡πÉ‡∏ô CommunityView
    @Binding var isShowingPostCreator: Bool
    @State private var selectedImage: PhotosPickerItem?
    @State private var newPostImage: Image?
    @State private var caption: String = ""
    @State private var username: String = "new_user" // ‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    @State private var profileImageName: String = "Profile1" // ‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    @Environment(\.dismiss) var dismiss

    var body: some View {
        NavigationView {
            VStack {
                HStack {
                    Text("Shere Your OOTD")
                        .font(.title)
                        .padding(.leading)
                    Spacer()
                    Button(action: {
                        isShowingPostCreator = false
                        dismiss()
                    }) {
                        Text("Cancel")
                            .font(.title2)
                            .padding(.trailing)
//                            .background(Color.clear)
                            .foregroundColor(.blue)

                    }
                }


                // ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                if let newPostImage = newPostImage {
                    newPostImage
                        .resizable()
                        .scaledToFit()
                        .frame(height: 200)
                        .padding()
                        .onTapGesture { // ‡πÉ‡∏´‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏î‡πÑ‡∏î‡πâ
                            selectedImage = nil // Clear selected image to remove preview
                            self.newPostImage = nil
                        }
                } else {
                    // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                    PhotosPicker(
                        selection: $selectedImage,
                        matching: .images,
                        preferredItemEncoding: .automatic
                    ) {
                        Image(systemName: "photo.badge.plus") // Use a system image
                            .font(.system(size: 150)) // Make the icon larger  <<-- Updated
                            .padding()
                        
//                            .background(Color.gray.opacity(0.2)) // Background for better visibility
//                            .clipShape(RoundedRectangle(cornerRadius: 8)) // Optional: Clip the shape
                    }
                    .onChange(of: selectedImage) { newItem in
                        Task {
                            if let data = try? await newItem?.loadTransferable(type: Data.self) {
                                if let uiImage = UIImage(data: data) {
                                    newPostImage = Image(uiImage: uiImage)
                                }
                            }
                        }
                    }
                }


                // ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢
                TextField("Enter your caption", text: $caption)
                    .padding()

                Spacer()

                // ‡∏õ‡∏∏‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå ‡πÅ‡∏•‡∏∞ Cancel
                HStack {

                    Spacer() // Pushes the buttons to the edges
                    Button(action: {
                        if let newPostImage = newPostImage {
                            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                            let postName = "post_\(UUID().uuidString)" // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
                            saveImageToAssets(image: newPostImage, imageName: postName) // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Assets
                            let newPost = Post(
                                username: username,
                                profileImageName: profileImageName, // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                                postImageName: postName, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                                caption: caption,
                                likes: 0,
                                comments: []
                            )
                            posts.insert(newPost, at: 0) // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
                        } else {
                            let newPost = Post(
                                username: username,
                                profileImageName: profileImageName, // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                                postImageName: nil, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                                caption: caption,
                                likes: 0,
                                comments: []
                            )
                            posts.insert(newPost, at: 0)
                        }
                        isShowingPostCreator = false // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå
                        dismiss()

                    }) {
                        Image(systemName: "arrow.up.circle") // Use a system icon for Post
                            .font(.title2)
                            .padding()
                            .background(Color.green)
                            .foregroundColor(.white)
                            .clipShape(Circle()) // Make it a circle
                    }
                }
                .padding()
            }
            .padding()
//            .navigationTitle("New Post")
            .navigationBarTitleDisplayMode(.inline)
            .navigationBarHidden(true)

        }
    }
    // Function to save the image to asset
    func saveImageToAssets(image: Image, imageName: String) {
        guard let uiImage = image.asUIImage() else { return }

        //save to library
        UIImageWriteToSavedPhotosAlbum(uiImage, nil, nil, nil)

        //code to save to asset

    }
}
extension Image {
    func asUIImage() -> UIImage? {
#if canImport(UIKit)
        return nil
#endif
        return nil
    }
}

// 5. Preview
struct CommunityView_Previews: PreviewProvider {
    static var previews: some View {
        CommunityView()
    }
}

